version: 0.2

env:
  variables:
    REPORT_BUCKET: "arjit-grype-report-s3"   # S3 bucket for Grype HTML report
    BUILD_BUCKET: "arjit-s3"                 # S3 bucket for your React build
    CLOUDFRONT_ID: "E3PIQ3TRAQXUY0"          # CloudFront distribution ID

phases:
  install:
    runtime-versions:
      nodejs: 16
      python: 3.9
    commands:
      - echo "=========================================="
      - echo "üîß INSTALL PHASE - Installing Dependencies"
      - echo "=========================================="
      - npm install
      - echo "‚¨áÔ∏è Installing Grype vulnerability scanner..."
      - curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
      - grype version
      - echo "‚úÖ Grype installation completed."

  pre_build:
    commands:
      - echo "=========================================="
      - echo "üîç PRE_BUILD PHASE - Running Vulnerability Scan"
      - echo "=========================================="

      # Run Grype scan
      - echo "Running Grype vulnerability scan..."
      - grype dir:. --fail-on medium --output json > grype-report.json || true
      - SCAN_EXIT_CODE=${PIPESTATUS[0]}

      # Validate JSON report
      - echo "üìÅ Checking for generated grype-report.json..."
      - >
        if [ ! -f "grype-report.json" ]; then
          echo "‚ùå grype-report.json not found! Exiting...";
          exit 1;
        fi
      - echo "‚úÖ JSON report generated successfully."

      # Convert JSON ‚Üí HTML
      - echo "=========================================="
      - echo "üßæ Converting JSON report to HTML..."
      - echo "=========================================="
      - >
        if [ ! -f "grype_to_html.py" ]; then
          echo "‚ùå grype_to_html.py not found in source root!";
          exit 1;
        fi
      - python3 grype_to_html.py
      - echo "‚úÖ HTML report created successfully."

      # Upload report to S3
      - echo "=========================================="
      - echo "üì§ Uploading HTML report to S3 bucket"
      - echo "=========================================="
      - >
        if [ -f "grype-report.html" ]; then
          aws s3 rm s3://$REPORT_BUCKET/grype-report.html || true;
          aws s3 cp grype-report.html s3://$REPORT_BUCKET/;
          echo "‚úÖ Report uploaded to s3://$REPORT_BUCKET/grype-report.html";
        else
          echo "‚ùå grype-report.html not found ‚Äî skipping upload!";
          exit 1;
        fi

      # Fail build if vulnerabilities found
      - >
        if [ $SCAN_EXIT_CODE -ne 0 ]; then
          echo "‚ùå Vulnerabilities found (medium or higher)! Failing pipeline after report upload...";
          exit 1;
        else
          echo "‚úÖ No critical vulnerabilities detected. Proceeding to build...";
        fi

  build:
    commands:
      - echo "=========================================="
      - echo "üèóÔ∏è BUILD PHASE - Building React Application"
      - echo "=========================================="
      - npm run build
      - echo "‚úÖ React build completed successfully."

  post_build:
    commands:
      - echo "=========================================="
      - echo "üöÄ DEPLOY PHASE - Uploading Build to S3"
      - echo "=========================================="
      - aws s3 sync build/ s3://$BUILD_BUCKET --delete
      - echo "‚úÖ Build uploaded to s3://$BUILD_BUCKET"
      - echo "=========================================="
      - echo "üßπ Creating CloudFront Invalidation"
      - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"
      - echo "‚úÖ CloudFront cache invalidated."

artifacts:
  files:
    - build/**/* 
    - grype-report.html
  base-directory: build
  discard-paths: no
