# version: 0.2

# env:
#   shell: bash
#   variables:
#     REPORT_BUCKET: "arjit-grype-report-s3"   # S3 bucket for Grype HTML report
#     BUILD_BUCKET: "arjit-s3"                 # S3 bucket for build output
#     CLOUDFRONT_ID: "E3PIQ3TRAQXUY0"          # CloudFront distribution ID

# phases:
#   install:
#     runtime-versions:
#       nodejs: 16
#       python: 3.9
#     commands:
#       - echo "=========================================="
#       - echo "üîß INSTALL PHASE - Installing dependencies"
#       - echo "=========================================="
#       - npm install
#       - echo "‚¨áÔ∏è Installing Grype vulnerability scanner..."
#       - curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
#       - grype version
#       - echo "‚úÖ Grype installation completed."

#   pre_build:
#     commands:
#       - echo "=========================================="
#       - echo "üîç PRE_BUILD PHASE - Running vulnerability scan"
#       - echo "=========================================="

#       # Run Grype scan (fail on medium or higher vulnerabilities)
#       - |
#         set +e
#         grype dir:. --fail-on medium --output json > grype-report.json
#         SCAN_EXIT_CODE=$?
#         set -e
#         echo "Grype scan exit code: $SCAN_EXIT_CODE"

#       # Validate JSON report
#       - |
#         if [ ! -f "grype-report.json" ]; then
#           echo "‚ùå grype-report.json not found! Exiting..."
#           exit 1
#         fi
#         echo "‚úÖ JSON report generated successfully."

#       # Convert JSON report to HTML using Python
#       - echo "üìä Converting JSON report to HTML..."
#       - python3 grype_to_html.py
#       - echo "‚úÖ HTML report generated successfully."

#       # Upload HTML report to S3
#       - echo "üì§ Uploading HTML report to S3 bucket..."
#       - |
#         if [ -f "grype-report.html" ]; then
#           aws s3 rm s3://$REPORT_BUCKET/grype-report.html || true
#           aws s3 cp grype-report.html s3://$REPORT_BUCKET/
#           echo "‚úÖ Report uploaded to s3://$REPORT_BUCKET/grype-report.html"
#         else
#           echo "‚ùå HTML report missing ‚Äî skipping upload!"
#           exit 1
#         fi

#       # Fail the pipeline if vulnerabilities were found
#       - |
#         if [ $SCAN_EXIT_CODE -ne 0 ]; then
#           echo "‚ùå Vulnerabilities found (medium or higher)! Stopping pipeline."
#           exit 1
#         else
#           echo "‚úÖ No medium or higher vulnerabilities found. Proceeding to build..."
#         fi

#   build:
#     commands:
#       - echo "=========================================="
#       - echo "üèóÔ∏è BUILD PHASE - Building React app"
#       - echo "=========================================="
#       - npm run build
#       - echo "‚úÖ Build completed successfully."

#   post_build:
#     commands:
#       - echo "=========================================="
#       - echo "üöÄ DEPLOY PHASE - Uploading build to S3"
#       - echo "=========================================="
#       - aws s3 sync build/ s3://$BUILD_BUCKET --delete
#       - echo "‚úÖ Build uploaded to s3://$BUILD_BUCKET"
#       - echo "üßπ Invalidating CloudFront cache..."
#       - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"
#       - echo "‚úÖ CloudFront invalidation completed."

# artifacts:
#   files:
#     - '**/*'
#     - grype-report.html
#   base-directory: build
#   discard-paths: no






###codeql
